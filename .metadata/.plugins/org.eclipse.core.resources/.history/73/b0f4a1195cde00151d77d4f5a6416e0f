package br.com.tecnonoticias.testeLaboratorio.testeLaboratorio;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Cc52259769 {

	public Cc52259769() {

	}

	public void registraNiveisHormonio(String path) throws IOException {

		File fl = new File(path);
		FileWriter fw = new FileWriter(fl);
		// int line = (int) (Math.random() * 100000);
		int read = 0;
		// for (int j = 0; j <= line; j++) {
		read = (int) (Math.random() * 100);
		for (int i = 0; i <= read; i++) {
			fw.write((int) (Math.random() * 100) + " ");
		}
		fw.write("\n");
		// }

		fw.close();

	}

	public static void main(String args[]) {

		// Cc52259769 in = new Cc52259769();
		try {
			new leituraCoor().lendoArquivo();
			new lendoLogHorm().LendoArquivoLoghorm();
		} catch (IOException ex) {
			Logger.getLogger(Cc52259769.class.getName()).log(Level.SEVERE, null, ex);
		}

	}

}

class leituraCoor {

	public String[] lendoArquivo() throws IOException {

		BufferedReader in = new BufferedReader(new FileReader(
				"/media/edgar/Novo volume/faculdade/AlgoritimoLogicaProgramacaoIV/testeLaboratorio/coor"));

		String text = in.readLine();
		in.close();

		String[] texto = text.split(" ");
		System.out.println("Posições " + texto.length);
		return texto;
	}
}

class lendoLogHorm {

	public String[][] LendoArquivoLoghorm() throws IOException {

		BufferedReader logHorm = new BufferedReader(new FileReader(
				"/media/edgar/Novo volume/faculdade/AlgoritimoLogicaProgramacaoIV/testeLaboratorio/logHorm"));
		String[][] arrayLoghorm = new String[100000][100];

		while (logHorm.ready()) {
			String text = logHorm.readLine();
			String logHormString[] = text.split(" ");
			
			/* linha */
			for (int i = 0; i < 100000; i++) {
				// /* quantidade de colunas */
				for (int j = 0; j < logHormString.length-1 || i < 100; j++) {
					if (arrayLoghorm[i] != null) {
						arrayLoghorm[i][j] = logHormString[j];
						logHormString[j] = null;
					}
				}
			}
		}
		logHorm.close();
		return arrayLoghorm;
	}
}