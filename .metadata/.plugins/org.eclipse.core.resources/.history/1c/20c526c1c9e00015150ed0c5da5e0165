package br.com.tecnonoticias.ep2.ep2;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;

public class Cc52259769 {

	public static void main(String[] args) {

		try {
			new lerArquivo().lendoArquivo();

			// String string1 = "http://www.tiexpert.net";
			// System.out.println("É uma página da web?");
			// System.out.println(string1.contains("www.") ? "sim" : "não");

		} catch (IOException ex) {
			Logger.getLogger(Cc52259769.class.getName()).log(Level.SEVERE, null, ex);
		}

	}
}

class lerArquivo {
//	private final String caracteres = " ,{}uis";
	public String uniao;
	public String interseccao;
	public String subtracao;
	public String cardinalidade;

	public String lendoArquivo() throws IOException {

		BufferedReader ler = new BufferedReader(
				new FileReader("/media/edgar/Novo volume/faculdade/AlgoritimoLogicaProgramacaoIV/ep2/operacao"));
		String linha;
		while ((linha = ler.readLine()) != null) {
			if (linha.contains("u")) {
				uniao = linha;
				novoConjuntoUniao(converter(uniao));
			} else if (linha.contains("i")) {
				interseccao = linha;
				novoConjuntoInterseccao(converter(interseccao));
			} else if (linha.contains("s")) {
				subtracao = linha;
				novoConjuntoSubtracao(converter(subtracao));
			} else {
				cardinalidade = linha;
				novoConjuntoCardinalidade(cardinalidade);
			}
		}
		// System.out.println(uniao);
		// System.out.println(interseccao);
		// System.out.println(subtracao);
		// System.out.println(cardinalidade);
		ler.close();

		return linha;
	}

	public int[] converter(String recebe) {
		StringTokenizer mod = new StringTokenizer(recebe, " ,{}uis");
		int[] numero = new int[mod.countTokens()];
		for (int i = 0; i < numero.length; i++) {
			numero[i] = Integer.parseInt(mod.nextToken());
			System.out.println(numero[i]);
		}
		return numero;
	}

	public String novoConjuntoUniao(int[] numeros) {
		int count = 1;
		int num = numeros[0];

		while (count < numeros.length) {
			if (num < numeros[count]) {
				num = numeros[count];
			}
			count++;
		}
		int[] cU = new int[num + 1];
		for (int i = 0; i < numeros.length; i++) {
			cU[numeros[i]] = 1;
		}
		String trata = "";
		for (int i = 0; i < cU.length; i++) {
			if (cU[i] > 0) {
				trata += Integer.toString(cU[i]); 
			}
		}

		System.out.println("maior numero " + num);
		return trata;
	}

	public String novoConjuntoInterseccao(int[] numeros) {

		int count = 1;
		int num = numeros[0];

		while (count < numeros.length) {
			if (num < numeros[count]) {
				num = numeros[count];
			}
			count++;
		}
		int[] cI = new int[num + 1];
		for (int i = 0; i < numeros.length; i++) {
			cI[numeros[i]] += 1;
		}
		String trata = "";
		for (int i = 0; i < cI.length; i++) {
			if (cI[i] > 1) {
				trata += Integer.toString(cI[i]); 
			}
		}
		System.out.println("Interseccao "+trata);
		return trata;
	}

	public String novoConjuntoSubtracao(int[] numeros) {

		int count = 1;
		int num = numeros[0];

		while (count < numeros.length) {
			if (num < numeros[count]) {
				num = numeros[count];
			}
			count++;
		}
		int[] cS = new int[num + 1];
		for (int i = 0; i < numeros.length; i++) {
			cS[numeros[i]] += 1;
		}
		for (int i = 0; i < cS.length; i++) {

			System.out.println("Novo Conjunto Subtração " + cS[i]);
		}

		return "";
	}
	public String novoConjuntoCardinalidade(String recebe){
		StringTokenizer mod = new StringTokenizer(recebe, " ,{}uis");
		System.out.println("Cardinalidade " + mod.countTokens());
		String card = Integer.toString(mod.countTokens());
		
		return card;
	}
}
